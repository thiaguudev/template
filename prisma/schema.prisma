generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  customerId   String?       @unique
  Subscription Subscription?
  Project      Project?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Plan {
  id            String         @id @default(uuid())
  name          String         @unique
  country       String
  priceId       String         @unique
  subscriptions Subscription[]
}

model Subscription {
  id                   String   @id @default(uuid())
  subscritiptionId     String   @unique
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  planId               String?
  plan                 Plan?    @relation(fields: [planId], references: [id])
  currentPeriodEndDate DateTime
  active               Boolean  @default(false)

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Project {
  id     String @id @default(uuid())
  name   String
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Survey {
  id          String  @id @default(uuid())
  title       String
  description String?
  type        String
  status      Int     @default(0)
}

model EmailSurvey {
  id String @id @default(uuid())
}

model LinkSurvey {
  id String @id @default(uuid())
}

model SMSSurvey {
  id String @id @default(uuid())
}
